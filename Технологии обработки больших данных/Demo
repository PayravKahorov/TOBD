{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMRmlCo0PThgid9N/wo9Tr+"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# **1**. Задан двухмерный массив ar1 размерности (10, 10), состоящий из случайных целых чисел в пределах от 0 до 15. Вычислить разность s_odd - s_even, где s_odd - сумма элементов, стоящих на позиции (x, y), где (x + y) является нечетным числом; s_even - сумма элементов, стоящих на позиции (x, y), где (x + y) является четным числом.\n","Решить задачу средствами numpy и/или pandas. Не использовать циклы и конструкции стандартного Python там, где можно использовать возможности данных библиотек\n"],"metadata":{"id":"Dsgs7dcc4nuR"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"EzJbnbma4bew"},"outputs":[],"source":["import numpy as np\n","import pandas as pd"]},{"cell_type":"code","source":["ar1 = np.random.randint(0,16,(10,10))\n","df = pd.DataFrame(ar1)"],"metadata":{"id":"pPioRYH84sPo"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["list(df.index)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IlJy-LnoT8dJ","executionInfo":{"status":"ok","timestamp":1674321086360,"user_tz":-180,"elapsed":610,"user":{"displayName":"Payrav Kahorov","userId":"15127841572095814136"}},"outputId":"33334a7e-5014-4a30-9663-7727bd338fce"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]"]},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"ZkN23bSTUFH_","executionInfo":{"status":"ok","timestamp":1674322300533,"user_tz":-180,"elapsed":246,"user":{"displayName":"Payrav Kahorov","userId":"15127841572095814136"}},"outputId":"a8d40365-60a2-46a3-f500-55ecdb556686"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    0   1   2   3   4   5   6   7   8   9\n","0   5   3   0   9  15  13  10  15  11   9\n","1   9  15   0   8   1   0  14   5   6  13\n","2   9  10   6   3   2   5   5   2  14   5\n","3   6   6   1  13   0  10   6   2  12   8\n","4   7  15  13   1  13   8   3   9   3   3\n","5   7   7   6   6  15  14   3   8   6   5\n","6   6   5   8   6  10  14   6  12  10   4\n","7  12   8   8  12   4   7   1   1  12   8\n","8  12   7   1  14   7   9  10   9   3   7\n","9   6   9  15   5   4   7   2   8   9   1"],"text/html":["\n","  <div id=\"df-50341399-3941-4ed9-8c9e-4eb02535861b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>9</td>\n","      <td>15</td>\n","      <td>13</td>\n","      <td>10</td>\n","      <td>15</td>\n","      <td>11</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>9</td>\n","      <td>15</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>14</td>\n","      <td>5</td>\n","      <td>6</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>9</td>\n","      <td>10</td>\n","      <td>6</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>14</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>6</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>13</td>\n","      <td>0</td>\n","      <td>10</td>\n","      <td>6</td>\n","      <td>2</td>\n","      <td>12</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>7</td>\n","      <td>15</td>\n","      <td>13</td>\n","      <td>1</td>\n","      <td>13</td>\n","      <td>8</td>\n","      <td>3</td>\n","      <td>9</td>\n","      <td>3</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>7</td>\n","      <td>7</td>\n","      <td>6</td>\n","      <td>6</td>\n","      <td>15</td>\n","      <td>14</td>\n","      <td>3</td>\n","      <td>8</td>\n","      <td>6</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>6</td>\n","      <td>5</td>\n","      <td>8</td>\n","      <td>6</td>\n","      <td>10</td>\n","      <td>14</td>\n","      <td>6</td>\n","      <td>12</td>\n","      <td>10</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>12</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>12</td>\n","      <td>4</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>12</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>12</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>14</td>\n","      <td>7</td>\n","      <td>9</td>\n","      <td>10</td>\n","      <td>9</td>\n","      <td>3</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>6</td>\n","      <td>9</td>\n","      <td>15</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>7</td>\n","      <td>2</td>\n","      <td>8</td>\n","      <td>9</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-50341399-3941-4ed9-8c9e-4eb02535861b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-50341399-3941-4ed9-8c9e-4eb02535861b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-50341399-3941-4ed9-8c9e-4eb02535861b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":69}]},{"cell_type":"code","source":["s1 = df[df.columns % 2 == 0][df.columns[df.columns % 2 == 0]].sum().sum()"],"metadata":{"id":"YXGti-nVUyMX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["s2 = df[df.columns % 2 != 0][df.columns[df.columns % 2 != 0]].sum().sum()\n","s_even = s1 + s2"],"metadata":{"id":"qiOHOUFSW9TX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["s3 = df[df.columns % 2 != 0][df.columns[df.columns % 2 == 0]].sum().sum()"],"metadata":{"id":"5MNwxBdWZ7X_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["s4 = df[df.columns % 2 == 0][df.columns[df.columns % 2 != 0]].sum().sum()\n","s_odd = s3 + s4"],"metadata":{"id":"IOpC8AgfaR2l"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["s_odd - s_even"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zE_n9uSsberW","executionInfo":{"status":"ok","timestamp":1674323034706,"user_tz":-180,"elapsed":289,"user":{"displayName":"Payrav Kahorov","userId":"15127841572095814136"}},"outputId":"33cb9f97-f9f0-4ecb-d53b-de00e4b54cab"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["-13"]},"metadata":{},"execution_count":97}]},{"cell_type":"markdown","source":["2. Датасет: Chinook_Sqlite.sqlite \n","С помощью кода на Python с использованием sqlite3 и SQL решить задачу. Реализовать функции на Python:\n","1. Которая возвращает все имеющиеся жанры. \n","2. Которая возвращает ID жанров, в которых написано более 100 треков, и их (жанров) название.\n","*Курсив*"],"metadata":{"id":"JPR4KHm2bmoA"}},{"cell_type":"code","source":["import sqlite3"],"metadata":{"id":"iLu8agEnbqqO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["con = sqlite3.connect('/content/Chinook_Sqlite.sqlite')"],"metadata":{"id":"MiWDrCcRcpDw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cur = con.cursor()"],"metadata":{"id":"E3VI3oKydHeB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"OPrTUM4idKi0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cur.executescript(\"PRAGMA table_info('table_name')\")\n","cur.fetchall()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eWID1exxhEFZ","executionInfo":{"status":"ok","timestamp":1674324875125,"user_tz":-180,"elapsed":343,"user":{"displayName":"Payrav Kahorov","userId":"15127841572095814136"}},"outputId":"c41e4251-4cd3-49c6-a37b-0e0a003ddb11"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[]"]},"metadata":{},"execution_count":155}]},{"cell_type":"markdown","source":["3. Датасет: album_artist.xlsx\n","С помощью кода на Python с использованием xlwings решить задачу. Вынести названия артистов на отдельный лист \"Артисты\" и присвоить каждому артисту уникальный идентификатор. Заменить названия артистов на исходном листе на идентификаторы с листа \"Артисты\".\n"],"metadata":{"id":"CnEJyje6in9Y"}},{"cell_type":"code","source":["# pip install xlwings \n","import xlwings as xw"],"metadata":{"id":"NpCLbqMji620"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["pd.read_excel('/content/album_artist.xlsx')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"e2EkIbuhioUP","executionInfo":{"status":"ok","timestamp":1674324956603,"user_tz":-180,"elapsed":836,"user":{"displayName":"Payrav Kahorov","userId":"15127841572095814136"}},"outputId":"9aa18ae9-521f-4ee2-d863-610af4076054"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Unnamed: 0  AlbumId                                              Title  \\\n","0             0        1              For Those About To Rock We Salute You   \n","1             1        4                                  Let There Be Rock   \n","2             2        2                                  Balls to the Wall   \n","3             3        3                                  Restless and Wild   \n","4             4        5                                           Big Ones   \n","..          ...      ...                                                ...   \n","342         342      342  Locatelli: Concertos for Violin, Strings and C...   \n","343         343      344  Schubert: The Late String Quartets & String Qu...   \n","344         344      345                                Monteverdi: L'Orfeo   \n","345         345      346                              Mozart: Chamber Music   \n","346         346      347  Koyaanisqatsi (Soundtrack from the Motion Pict...   \n","\n","                                                  Name  \n","0                                                AC/DC  \n","1                                                AC/DC  \n","2                                               Accept  \n","3                                               Accept  \n","4                                            Aerosmith  \n","..                                                 ...  \n","342   Mela Tenenbaum, Pro Musica Prague & Richard Kapp  \n","343                             Emerson String Quartet  \n","344  C. Monteverdi, Nigel Rogers - Chiaroscuro; Lon...  \n","345                                      Nash Ensemble  \n","346                              Philip Glass Ensemble  \n","\n","[347 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-8ea4c080-3605-493f-b2ab-478de0adbfcf\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>AlbumId</th>\n","      <th>Title</th>\n","      <th>Name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>For Those About To Rock We Salute You</td>\n","      <td>AC/DC</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>Let There Be Rock</td>\n","      <td>AC/DC</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>Balls to the Wall</td>\n","      <td>Accept</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>Restless and Wild</td>\n","      <td>Accept</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>Big Ones</td>\n","      <td>Aerosmith</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>342</th>\n","      <td>342</td>\n","      <td>342</td>\n","      <td>Locatelli: Concertos for Violin, Strings and C...</td>\n","      <td>Mela Tenenbaum, Pro Musica Prague &amp; Richard Kapp</td>\n","    </tr>\n","    <tr>\n","      <th>343</th>\n","      <td>343</td>\n","      <td>344</td>\n","      <td>Schubert: The Late String Quartets &amp; String Qu...</td>\n","      <td>Emerson String Quartet</td>\n","    </tr>\n","    <tr>\n","      <th>344</th>\n","      <td>344</td>\n","      <td>345</td>\n","      <td>Monteverdi: L'Orfeo</td>\n","      <td>C. Monteverdi, Nigel Rogers - Chiaroscuro; Lon...</td>\n","    </tr>\n","    <tr>\n","      <th>345</th>\n","      <td>345</td>\n","      <td>346</td>\n","      <td>Mozart: Chamber Music</td>\n","      <td>Nash Ensemble</td>\n","    </tr>\n","    <tr>\n","      <th>346</th>\n","      <td>346</td>\n","      <td>347</td>\n","      <td>Koyaanisqatsi (Soundtrack from the Motion Pict...</td>\n","      <td>Philip Glass Ensemble</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>347 rows × 4 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8ea4c080-3605-493f-b2ab-478de0adbfcf')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-8ea4c080-3605-493f-b2ab-478de0adbfcf button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-8ea4c080-3605-493f-b2ab-478de0adbfcf');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":156}]},{"cell_type":"code","source":["xw.Book()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XG60Vmctj3JJ","executionInfo":{"status":"ok","timestamp":1674325483168,"user_tz":-180,"elapsed":241,"user":{"displayName":"Payrav Kahorov","userId":"15127841572095814136"}},"outputId":"47485af0-6071-40c4-f9ea-d016625eb87e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["xlwings.main.Book"]},"metadata":{},"execution_count":169}]},{"cell_type":"code","source":[],"metadata":{"id":"zkdxVmaxlPRI"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["4. Датасет: us-countries.csv\n","Создайте таблицу, где по строкам располагаются названия штатов, по столбцам - каждый из 12 месяцев 2020 года, а в ячейках таблицы хранится суммарное количество смертей в данном штате в этот месяц. Если информация за какой-то месяц отсутствует, укажите в этой ячейке значение 0.\n"],"metadata":{"id":"NXDBZBXIjtE0"}},{"cell_type":"code","source":["import pandas as pd"],"metadata":{"id":"XLNYwvFpjtgb"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"bAYPa7KzoOYj"},"execution_count":null,"outputs":[]}]}